-- CREATE THE PRODUCTS TABLE
CREATE TABLE PRODUCTS ( 
    PRODUCT_ID INT PRIMARY KEY, 
    PRODUCT_NAME VARCHAR(250) NOT NULL, 
    PRICE DECIMAL(10, 2) NOT NULL 
); 

-- INSERT DATA INTO THE PRODUCTS TABLE 
INSERT INTO PRODUCTS (PRODUCT_ID, PRODUCT_NAME, PRICE) VALUES 
(1, 'SMARTPHONE', 35000), 
(2, 'LAPTOP', 65000), 
(3, 'HEADPHONES', 5500), 
(4, 'TELEVISION', 85000), 
(5, 'GAMING CONSOLE', 32000); 

-- PART - A 
-- 1. CREATE A CURSOR PRODUCT_CURSOR TO FETCH ALL THE ROWS FROM PRODUCTS TABLE. 
DECLARE @ID INT, @NAME VARCHAR(100), @PRICE DECIMAL(10,2);

DECLARE CURSOR_FETCHDATA CURSOR
FOR
    SELECT * FROM PRODUCTS;

OPEN CURSOR_FETCHDATA;

FETCH NEXT FROM CURSOR_FETCHDATA
INTO @ID, @NAME, @PRICE;

WHILE @@FETCH_STATUS = 0
BEGIN
    PRINT(CAST(@ID AS VARCHAR(100)) + ' ' + @NAME + ' ' + CAST(@PRICE AS VARCHAR(100)));

    FETCH NEXT FROM CURSOR_FETCHDATA
    INTO @ID, @NAME, @PRICE;
END;

CLOSE CURSOR_FETCHDATA;

DEALLOCATE CURSOR_FETCHDATA;

-- 2. CREATE A CURSOR PRODUCT_CURSOR_FETCH TO FETCH RECORDS IN THE FORM OF PRODUCTID_PRODUCTNAME. 
DECLARE @ID1 INT, @NAME1 VARCHAR(100);

DECLARE PRODUCT_CURSOR_FETCH CURSOR
FOR 
    SELECT PRODUCT_ID, PRODUCT_NAME
    FROM PRODUCTS;

OPEN PRODUCT_CURSOR_FETCH;

FETCH NEXT FROM PRODUCT_CURSOR_FETCH
INTO @ID1, @NAME1;

WHILE @@FETCH_STATUS = 0
BEGIN
    PRINT(CAST(@ID1 AS VARCHAR(100)) + '_' + @NAME1);

    FETCH NEXT FROM PRODUCT_CURSOR_FETCH
    INTO @ID1, @NAME1;
END;

CLOSE PRODUCT_CURSOR_FETCH;

DEALLOCATE PRODUCT_CURSOR_FETCH;

-- 3. CREATE A CURSOR TO FIND AND DISPLAY PRODUCTS ABOVE PRICE 30,000. 
DECLARE @ID2 INT, @NAME2 VARCHAR(100), @PRICE2 DECIMAL(10, 2);

DECLARE PRODUCT_CURSOR_FETCH_PRICE CURSOR
FOR 
    SELECT *
    FROM PRODUCTS
    WHERE PRICE > 30000;

OPEN PRODUCT_CURSOR_FETCH_PRICE;

FETCH NEXT FROM PRODUCT_CURSOR_FETCH_PRICE
INTO @ID2, @NAME2, @PRICE2;

WHILE @@FETCH_STATUS = 0
BEGIN
    PRINT(CAST(@ID2 AS VARCHAR(100)) + '_' + @NAME2 + ' ' + CAST(@PRICE2 AS VARCHAR(100)));

    FETCH NEXT FROM PRODUCT_CURSOR_FETCH_PRICE
    INTO @ID2, @NAME2, @PRICE2;
END;

CLOSE PRODUCT_CURSOR_FETCH_PRICE;

DEALLOCATE PRODUCT_CURSOR_FETCH_PRICE;

-- 4. CREATE A CURSOR PRODUCT_CURSORDELETE THAT DELETES ALL THE DATA FROM THE PRODUCTS TABLE. 
DECLARE @PRODUCTID INT;

DECLARE PRODUCT_CURSORDELETE CURSOR
FOR
    SELECT PRODUCT_ID
    FROM PRODUCTS;

OPEN PRODUCT_CURSORDELETE;

FETCH NEXT FROM PRODUCT_CURSORDELETE
INTO @PRODUCTID;

WHILE @@FETCH_STATUS = 0
BEGIN
    DELETE FROM PRODUCTS 
    WHERE PRODUCT_ID = @PRODUCTID;

    FETCH NEXT FROM PRODUCT_CURSORDELETE 
    INTO @PRODUCTID;
END;

CLOSE PRODUCT_CURSORDELETE;

DEALLOCATE PRODUCT_CURSORDELETE;

-- PART – B 
-- 5. CREATE A CURSOR PRODUCT_CURSORUPDATE THAT RETRIEVES ALL THE DATA FROM THE PRODUCTS TABLE AND INCREASES 
-- THE PRICE BY 10%. 
DECLARE @ID12 INT, @PRICE1 DECIMAL(10,2);

DECLARE PRODUCT_CURSORUPDATE CURSOR
FOR
    SELECT PRODUCT_ID, PRICE
    FROM PRODUCTS;

OPEN PRODUCT_CURSORUPDATE;

FETCH NEXT FROM PRODUCT_CURSORUPDATE
INTO @ID12, @PRICE1;

WHILE @@FETCH_STATUS = 0
BEGIN
    UPDATE PRODUCTS
    SET PRICE = @PRICE1 + (@PRICE1 * 10)/100
    WHERE PRODUCT_ID = @ID12;

    FETCH NEXT FROM PRODUCT_CURSORUPDATE
    INTO @ID12, @PRICE1;
END;

CLOSE PRODUCT_CURSORUPDATE;

DEALLOCATE PRODUCT_CURSORUPDATE;

SELECT * FROM PRODUCTS;

-- 6. CREATE A CURSOR TO ROUND THE PRICE OF EACH PRODUCT TO THE NEAREST WHOLE NUMBER.
DECLARE @IDUNIQUE INT, @PRICE3 DECIMAL(10,2);

DECLARE PRODUCT_CURSORROUND CURSOR
FOR
    SELECT PRODUCT_ID, PRICE
    FROM PRODUCTS;

OPEN PRODUCT_CURSORROUND;

FETCH NEXT FROM PRODUCT_CURSORROUND
INTO @IDUNIQUE, @PRICE3;

WHILE @@FETCH_STATUS = 0
BEGIN
    UPDATE PRODUCTS
    SET PRICE = ROUND(@PRICE3, 2)
    WHERE PRODUCT_ID = @IDUNIQUE;

    FETCH NEXT FROM PRODUCT_CURSORROUND
    INTO @IDUNIQUE, @PRICE3;
END;

CLOSE PRODUCT_CURSORROUND;

DEALLOCATE PRODUCT_CURSORROUND;

SELECT * FROM PRODUCTS;

-- PART – C 
CREATE TABLE NEWPRODUCTS ( 
    PRODUCT_ID INT PRIMARY KEY, 
    PRODUCT_NAME VARCHAR(250) NOT NULL, 
    PRICE DECIMAL(10, 2) NOT NULL 
);

-- 7. CREATE A CURSOR TO INSERT DETAILS OF PRODUCTS INTO THE NEWPRODUCTS TABLE IF THE PRODUCT IS “LAPTOP”.
-- (NOTE: CREATE NEWPRODUCTS TABLE FIRST WITH SAME FIELDS AS PRODUCTS TABLE). 
DECLARE @IDPRODUCT INT, @NAMEPRODUCT VARCHAR(100), @PRICEPRODUCT DECIMAL(8, 2);

DECLARE CURSOR_NEWPRODUCT CURSOR
FOR
    SELECT * 
    FROM PRODUCTS
    WHERE PRODUCT_NAME = 'LAPTOP';

OPEN CURSOR_NEWPRODUCT;

FETCH NEXT FROM CURSOR_NEWPRODUCT
INTO @IDPRODUCT, @NAMEPRODUCT, @PRICEPRODUCT;

WHILE @@FETCH_STATUS = 0
BEGIN
    INSERT INTO NEWPRODUCTS VALUES (@IDPRODUCT, @NAMEPRODUCT, @PRICEPRODUCT);

    FETCH NEXT FROM CURSOR_NEWPRODUCT
    INTO @IDPRODUCT, @NAMEPRODUCT, @PRICEPRODUCT;
END;

CLOSE CURSOR_NEWPRODUCT;

DEALLOCATE CURSOR_NEWPRODUCT;

SELECT * FROM NEWPRODUCTS;

-- 8. CREATE A CURSOR TO ARCHIVE HIGH-PRICE PRODUCTS IN A NEW TABLE (ARCHIVEDPRODUCTS),
-- MOVES PRODUCTS WITH A PRICE ABOVE 50000 TO AN ARCHIVE TABLE, REMOVING THEM FROM THE ORIGINAL PRODUCTS TABLE.
CREATE TABLE ARCHIVE ( 
    PRODUCT_ID INT PRIMARY KEY, 
    PRODUCT_NAME VARCHAR(250) NOT NULL, 
    PRICE DECIMAL(10, 2) NOT NULL 
);

DECLARE @IDARCHIVE INT, @NAMEARCHIVE VARCHAR(100), @PRICEARCHIVE DECIMAL(8, 2);

DECLARE CURSOR_NEWTABLE CURSOR
FOR
    SELECT * 
    FROM PRODUCTS
    WHERE PRICE >= 50000;

OPEN CURSOR_NEWTABLE;

FETCH NEXT FROM CURSOR_NEWTABLE
INTO @IDARCHIVE, @NAMEARCHIVE, @PRICEARCHIVE;

 
WHILE @@FETCH_STATUS = 0
BEGIN
    INSERT INTO ARCHIVE VALUES (@IDARCHIVE, @NAMEARCHIVE, @PRICEARCHIVE);

    DELETE FROM PRODUCTS
    WHERE PRODUCT_ID = @IDARCHIVE;

    FETCH NEXT FROM CURSOR_NEWTABLE
    INTO @IDARCHIVE, @NAMEARCHIVE, @PRICEARCHIVE;
END;

CLOSE CURSOR_NEWTABLE;

DEALLOCATE CURSOR_NEWTABLE;

SELECT * FROM ARCHIVE;
SELECT * FROM PRODUCTS;
